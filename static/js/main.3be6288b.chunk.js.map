{"version":3,"sources":["components/Navbar.jsx","components/RoleBlock.jsx","constants/functions/roleFunctions.js","components/Forms.jsx","constants/sampleCode/supplyChain.js","components/Stepper.jsx","pages/CreatePage.js","pages/HomePage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","Transition","React","forwardRef","props","ref","Slide","direction","paper","height","minWidth","justifyContent","alignItems","display","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","border","palette","primary","main","boxShadow","zIndex","arrowContainer","width","arrow","appBar","marginLeft","flex","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","fontWeight","RoleBlock","useState","open","setOpen","expanded","setExpanded","type","setType","nextRole","setNextRole","prevRole","setPrevRole","useEffect","roles","indexOf","name","length","roleFunctions","setroleFunctions","currentRoleName","nextRoleName","previousRoleName","arrayFirst","desc","arrayMiddle","arrayLast","functions","handleClose","blank","onClick","handleClickOpen","style","textAlign","Fab","div","initial","x","opacity","animate","whileHover","scale","transition","delay","flexDirection","cursor","lastElement","Dialog","onClose","aria-labelledby","TransitionComponent","keepMounted","removeRole","DialogTitle","id","DialogContent","DialogContentText","TextField","onChange","event","newName","newRoles","map","item","setRoles","changeRoleName","target","value","label","margin","func","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","DialogActions","formControl","selectEmpty","marginTop","extendedIcon","xScrollable","whiteSpace","overflowX","container","minHeight","deployContainer","codebox","overflowY","codeboxHeading","padding","content","detailContainer","YourDetails","Container","maxWidth","y","duration","component","noValidate","autoComplete","required","autoFocus","multiline","ProductDetails","category","setCategory","productArgs","setProductArgs","propertyName","setPropertyName","propertyType","setPropertyType","FormControl","InputLabel","Select","MenuItem","index","ListItem","ListItemIcon","newProductArgs","filter","property","deleteProductArg","ListItemText","secondary","labelId","SupplyChain","roleName","setRoleName","trackwithlot","trackwithproduct","state","setState","role","handleChangeCheckbox","checked","key","FormControlLabel","control","Checkbox","Deployment","deployAction","Completed","Paper","square","elevation","backButton","instructions","marginBottom","fullPage","floatRight","float","HorizontalLabelPositionBelowStepper","activeStep","setActiveStep","steps","handleBack","prevActiveStep","Stepper","alternativeLabel","Step","StepLabel","disabled","startIcon","stepIndex","getStepContent","endIcon","CreatePage","HomePage","to","textDecoration","borderRadius","Routes","path","exact","App","THEME","createMuiTheme","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3be6288b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Supply Chain Hub\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { functions } from \"../constants/functions/roleFunctions\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    height: 50,\r\n    minWidth: 120,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"inline-flex\",\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    backgroundColor: \"white\",\r\n    border: `2px solid ${theme.palette.primary.main}`,\r\n    color: theme.palette.primary.main,\r\n    boxShadow: \"0 5px 20px rgba(0,0,0,.16)\",\r\n    zIndex: 0,\r\n  },\r\n  arrowContainer: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 75,\r\n  },\r\n  arrow: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 2,\r\n    width: \"100%\",\r\n    zIndex: -1,\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    fontWeight: 500,\r\n  },\r\n}));\r\n\r\nfunction RoleBlock(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [type, setType] = useState(0);\r\n  const [nextRole, setNextRole] = useState(\"\");\r\n  const [prevRole, setPrevRole] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props?.roles?.indexOf(props.name) === 0) {\r\n      setType(0);\r\n      setNextRole(props.roles?.[props?.roles?.indexOf(props.name) + 1]);\r\n      setPrevRole(0);\r\n    } else if (props?.roles?.indexOf(props.name) === props?.roles?.length - 1) {\r\n      setType(2);\r\n      setNextRole(0);\r\n      setPrevRole(props.roles?.[props?.roles?.indexOf(props.name) - 1]);\r\n    } else {\r\n      setType(1);\r\n      setNextRole(props.roles?.[props?.roles?.indexOf(props.name) + 1]);\r\n      setPrevRole(props.roles?.[props?.roles?.indexOf(props.name) - 1]);\r\n    }\r\n  }, [props]);\r\n\r\n  const [roleFunctions, setroleFunctions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setroleFunctions(functions(props.name, nextRole, prevRole, type));\r\n  }, [props, nextRole, prevRole, type]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const removeRole = () => {\r\n    props.removeRole(props.name);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeAccordian = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const changeRoleName = (newName) => {\r\n    const newRoles = props.roles.map((item) => {\r\n      if (item === props.name) return newName;\r\n      else return item;\r\n    });\r\n    props.setRoles(newRoles);\r\n  };\r\n\r\n  if (props.blank) {\r\n    return (\r\n      <div\r\n        onClick={props.handleClickOpen}\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          variant=\"extended\"\r\n          style={{ boxShadow: \"none\" }}\r\n        >\r\n          <AddIcon />\r\n          Add Role &nbsp;\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ x: -200, opacity: 0 }}\r\n        animate={{ x: 0, opacity: 1 }}\r\n        whileHover={{ scale: 1.05 }}\r\n        transition={{ type: \"tween\", delay: 0.2 }}\r\n        style={{\r\n          display: \"inline-flex\",\r\n          flexDirection: \"row\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        <div className={classes.paper}>{props.name}</div>\r\n        {!props.lastElement ? (\r\n          <div className={classes.arrowContainer}>\r\n            <div className={classes.arrow}></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </motion.div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {props.name}\r\n            </Typography>\r\n            <Button onClick={removeRole} color=\"secondary\" variant=\"contained\">\r\n              Delete Role\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogTitle id=\"form-dialog-title\">Edit {props.name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Slightest Change in each role will affect the whole supply chain.\r\n          </DialogContentText>\r\n          <TextField\r\n            onChange={(event) => changeRoleName(event.target.value)}\r\n            label=\"Role Name\"\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            value={props.name}\r\n          />\r\n          <br />\r\n          <br />\r\n          <DialogContentText>Functions</DialogContentText>\r\n          <div className={classes.root}>\r\n            {roleFunctions.map((func) => (\r\n              <Accordion\r\n                expanded={expanded === func.name}\r\n                onChange={handleChangeAccordian(func.name)}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    {func.name}\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>{func.desc}</Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions></DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoleBlock;\r\n","export const functions = (\r\n  currentRoleName,\r\n  nextRoleName,\r\n  previousRoleName,\r\n  type\r\n) => {\r\n  const arrayFirst = [\r\n    {\r\n      name: \"makeLot()\",\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: \"packedLot()\",\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `forSaleLotBy${currentRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `sellLotTo${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `shipLotFrom${currentRoleName}To${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `add${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n  ];\r\n  const arrayMiddle = [\r\n    {\r\n      name: `payFrom${currentRoleName}To${previousRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `receivedBy${currentRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `forSaleLotBy${currentRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `sellLotTo${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `shipLotFrom${currentRoleName}To${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `add${nextRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n  ];\r\n  const arrayLast = [\r\n    {\r\n      name: `payFrom${currentRoleName}To${previousRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n    {\r\n      name: `receivedBy${currentRoleName}()`,\r\n      desc:\r\n        \"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget maximus est, id dignissim quam.\",\r\n    },\r\n  ];\r\n\r\n  switch (type) {\r\n    case 0:\r\n      return arrayFirst;\r\n    case 1:\r\n      return arrayMiddle;\r\n    case 2:\r\n      return arrayLast;\r\n    default:\r\n      return arrayMiddle;\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { code } from \"../constants/sampleCode/supplyChain\";\r\nimport RoleBlock from \"./RoleBlock\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  xScrollable: {\r\n    width: \"auto\",\r\n    whiteSpace: \"noWrap\",\r\n    overflowX: \"scroll\",\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    textAlign: \"center\",\r\n  },\r\n  container: {\r\n    minHeight: \"55vh\",\r\n  },\r\n  deployContainer: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    height: \"55vh\",\r\n    width: \"100%\",\r\n  },\r\n  codebox: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n    backgroundColor: \"#FCFCFC\",\r\n    overflowY: \"scroll\",\r\n  },\r\n\r\n  codeboxHeading: {\r\n    backgroundColor: \"#E7E7E7\",\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  content: {\r\n    paddingLeft: theme.spacing(5),\r\n  },\r\n\r\n  detailContainer: {\r\n    padding: theme.spacing(5),\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport function YourDetails() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div\r\n        className={classes.container}\r\n        initial={{ y: 100, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ duration: 0.5, type: \"tween\" }}\r\n      >\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Your Details\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"outlined-basic1\"\r\n            label=\"Your Name\"\r\n            variant=\"outlined\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic2\"\r\n            label=\"Organisation Name\"\r\n            variant=\"outlined\"\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic3\"\r\n            label=\"Your Address\"\r\n            variant=\"outlined\"\r\n            required\r\n            multiline\r\n          />\r\n        </form>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport function ProductDetails() {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState(\"\");\r\n\r\n  const [productArgs, setProductArgs] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [propertyName, setPropertyName] = useState(\"\");\r\n  const [propertyType, setPropertyType] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const handleTypeChange = (event) => {\r\n    setPropertyType(event.target.value);\r\n  };\r\n  const addProductArg = () => {\r\n    setProductArgs([\r\n      ...productArgs,\r\n      { name: propertyName, type: propertyType },\r\n    ]);\r\n    setPropertyName(\"\");\r\n    setPropertyType(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteProductArg = (item) => {\r\n    const newProductArgs = productArgs.filter(\r\n      (property) => property.name !== item.name\r\n    );\r\n    setProductArgs([...newProductArgs]);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div\r\n        className={classes.container}\r\n        initial={{ y: 100, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ duration: 0.5, type: \"tween\" }}\r\n      >\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Product Details\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"outlined-basic1\"\r\n            label=\"Product Name\"\r\n            variant=\"outlined\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n            required\r\n          >\r\n            <InputLabel id=\"demo-simple-select-filled-label\">\r\n              Category\r\n            </InputLabel>\r\n            <Select value={category} onChange={handleChange}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={10}>Industrial</MenuItem>\r\n              <MenuItem value={20}>Medical</MenuItem>\r\n              <MenuItem value={30}>Other</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {productArgs.map((item, index) => (\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <DeleteIcon\r\n                  color=\"error\"\r\n                  cursor=\"pointer\"\r\n                  onClick={() => deleteProductArg(item)}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.name} secondary={item.type} />\r\n            </ListItem>\r\n          ))}\r\n        </form>\r\n        <br />\r\n        <div>\r\n          <Fab variant=\"extended\" color=\"primary\" onClick={handleClickOpen}>\r\n            <AddIcon className={classes.extendedIcon} />\r\n            Add Property &nbsp;\r\n          </Fab>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Add Property</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Manufactuers will have to make sure to add theses customized\r\n                property values while packing products.\r\n              </DialogContentText>\r\n              <br />\r\n              <TextField\r\n                value={propertyName}\r\n                onChange={(event) => setPropertyName(event.target.value)}\r\n                label=\"Property Name\"\r\n                type=\"text\"\r\n                margin=\"dense\"\r\n              />\r\n              <br />\r\n              <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                <Select\r\n                  value={propertyType}\r\n                  labelId=\"demo-simple-select-label\"\r\n                  onChange={handleTypeChange}\r\n                  style={{ minWidth: 120 }}\r\n                >\r\n                  <MenuItem aria-label=\"None\" value=\"\" />\r\n                  <MenuItem value={\"String\"}>String</MenuItem>\r\n                  <MenuItem value={\"Integer\"}>Integer</MenuItem>\r\n                  <MenuItem value={\"Boolean\"}>Boolean</MenuItem>\r\n                  <MenuItem value={\"Address(Hex)\"}>Address(Hex)</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={addProductArg} color=\"primary\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport function SupplyChain() {\r\n  const classes = useStyles();\r\n  const [roles, setRoles] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [roleName, setRoleName] = useState(\"\");\r\n  const [state, setState] = React.useState({\r\n    trackwithlot: false,\r\n    trackwithproduct: true,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const addRole = () => {\r\n    setRoles([...roles, roleName]);\r\n    setOpen(false);\r\n    setRoleName(\"\");\r\n  };\r\n\r\n  const removeRole = (role) => {\r\n    const newRoles = roles.filter((item) => item !== role);\r\n    setRoles(newRoles);\r\n  };\r\n\r\n  const handleChangeCheckbox = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <motion.div\r\n        initial={{ y: 100, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ duration: 0.5, type: \"tween\" }}\r\n      >\r\n        <br />\r\n        <div>\r\n          {roles.length ? (\r\n            <RoleBlock blank handleClickOpen={handleClickOpen} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={classes.xScrollable}>\r\n          {roles.length ? (\r\n            roles.map((role, index) =>\r\n              roles.length - 1 === index ? (\r\n                <RoleBlock\r\n                  key={index}\r\n                  name={role}\r\n                  removeRole={removeRole}\r\n                  roles={roles}\r\n                  setRoles={setRoles}\r\n                  lastElement\r\n                />\r\n              ) : (\r\n                <RoleBlock\r\n                  key={index}\r\n                  name={role}\r\n                  removeRole={removeRole}\r\n                  setRoles={setRoles}\r\n                  roles={roles}\r\n                />\r\n              )\r\n            )\r\n          ) : (\r\n            <RoleBlock blank handleClickOpen={handleClickOpen} />\r\n          )}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={state.trackwithlot}\r\n                  onChange={handleChangeCheckbox}\r\n                  name=\"trackwithlot\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Track With Lot ID \"\r\n            />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={state.trackwithproduct}\r\n                  onChange={handleChangeCheckbox}\r\n                  name=\"trackwithproduct\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Track With Product ID \"\r\n            />\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Role</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Manufactuers will have to make sure to add theses customized role\r\n              values while packing products.\r\n            </DialogContentText>\r\n\r\n            <TextField\r\n              value={roleName}\r\n              onChange={(event) => setRoleName(event.target.value)}\r\n              label=\"Role Name\"\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={addRole} color=\"primary\">\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Deployment() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <motion.div\r\n        initial={{ y: 100, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ duration: 0.5, type: \"tween\" }}\r\n        className={classes.deployContainer}\r\n      >\r\n        <div className={classes.codebox}>\r\n          <div className={classes.codeboxHeading}>\r\n            <Typography>SupplyChain.sol</Typography>\r\n            <Button\r\n              className={classes.deployAction}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              DEPLOY\r\n            </Button>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <pre>{code}</pre>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport function Completed() {\r\n  const classes = useStyles();\r\n  return (\r\n    <motion.div\r\n      initial={{ y: 100, opacity: 0 }}\r\n      animate={{ y: 0, opacity: 1 }}\r\n      transition={{ duration: 0.5, type: \"tween\" }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <div className={classes.container}>\r\n          <br />\r\n          <Paper square className={classes.detailContainer} elevation={5}>\r\n            <Typography variant=\"h3\">Contract Address</Typography>\r\n            <Typography variant=\"h6\">\r\n              0xfab9f7a5615a4fa7da0b8e669b076dc62b545e86\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"h3\">Transaction Hash</Typography>\r\n            <Typography variant=\"h6\">\r\n              0x8b38a6d785f3ba2784a322b33e6fcc9932458429aeaff88cbe03ac4625ffedfc\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"h3\">Owner</Typography>\r\n            <Typography variant=\"h6\">\r\n              0x2114107ddd2c0bb7a174dda0245d0052618c1c28\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n}\r\n","export const code = `pragma solidity ^0.5.17;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract SupplyChain{\r\n    \r\n    address contractOwner;\r\n    mapping(string => lot) lots;            //mapping of lotId with struct of lot\r\n    mapping(string => product) products;    //mapping of productId with struct of product\r\n    mapping(address => user) users;         //mapping of userAddress with struct of user\r\n    mapping(address => bool) isUser;        // checks if he is part of supplychain\r\n    mapping(string => deal) deals;          //mapping of txnHash with struct of deal\r\n\r\n    enum State{\r\n        Assembling,\r\n        Made,\r\n        Packed,\r\n        ForSale,\r\n        Sold,\r\n        Shipped,\r\n        Received\r\n    }\r\n    \r\n    State constant defaultState = State.Assembling;\r\n    string brandName;\r\n    \r\n    struct user{\r\n        uint role;\r\n        address userId;\r\n        address parentId;                   //stores the address of parent i.e. distributer will have manufacturer as his parent\r\n        mapping(address=>bool) childIds;    // mapping of current user to its children addresses\r\n        uint currentQuantity;\r\n        string name;\r\n        string officeAddress;\r\n    }\r\n    \r\n    /*struct factory{\r\n        string factoryId;\r\n        string  originFactoryName;          // Manufacturer Name\r\n        string  originFactoryInformation;   // Manufacturer Information\r\n        string  originFactoryAddress;       // Factory Address\r\n    }*/\r\n    \r\n    struct deal{ \r\n        string txnHash;\r\n        uint capacity;\r\n        address payable buyerAddress;\r\n        uint buyingPrice;\r\n        address sellerAddress;\r\n        uint sellingPrice;\r\n    }\r\n\r\n    struct lot{ \r\n        string lotId;\r\n        // string factoryId;\r\n        address currentOwner;\r\n        string[] productIds;\r\n        State productState;\r\n        mapping(uint => address) trackUser;         //Roles mapped with userId [0->Owner, 1-> Manufacturer, 2-> Distributer, 3-> Retailer]\r\n        mapping(address => uint) buyingPrices;      //above userId mapped to buyingPrices\r\n        mapping(address => uint) sellingPrices;     //above userId mapped to sellingPrices\r\n        mapping(uint => string) trackTxn;           //Roles mapped with userId [0->Owner, 1-> Manufacturer, 2-> Distributer, 3-> Retailer]\r\n    }\r\n    \r\n    \r\n    struct product{\r\n        string productId;       //Barcode\r\n        string lotId;\r\n        uint finalBuyingPrice;\r\n        uint finalSellingPrice;\r\n    }\r\n    \r\n    event Made(string lotId);\r\n    event Packed();\r\n    event ForSale();\r\n    event Sold();\r\n    event Shipped();\r\n    event Received();\r\n    event TxAdded();\r\n    \r\n    event OwnerMadeManufacturer();\r\n    event UserAdded(address indexed account);\r\n    // event ManufacturerAdded(address indexed account);\r\n    // event ManufacturerRemoved(address indexed account);\r\n    // event DistributorAdded(address indexed account);\r\n    event DistributorRemoved(address indexed account);\r\n    event RetailerAdded(address indexed account);\r\n    event RetailerRemoved(address indexed account);\r\n    \r\n    // event FactoryAdded(string factoryId);\r\n    event LotMade(string lotId);\r\n    \r\n    event PaymentSuccessful();\r\n    event DealFailed(address buyerAddress);\r\n    \r\n    constructor(string memory _name, string memory _officeAddress) public {\r\n        require(bytes(_name).length!=0 && bytes(_officeAddress).length!=0);\r\n        contractOwner = msg.sender;\r\n        user memory owner = user({\r\n            role: 0,\r\n            userId : msg.sender,\r\n            parentId : address(0),\r\n            currentQuantity : 0,\r\n            name: _name,\r\n            officeAddress: _officeAddress\r\n        });\r\n        \r\n        setUser(msg.sender);\r\n        users[msg.sender] = owner;\r\n    }\r\n    \r\n    modifier onlyContractOwner{\r\n        \r\n        require(msg.sender == contractOwner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyManufacturer{\r\n        \r\n        require(users[msg.sender].role == 1);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyDistributor{\r\n       \r\n       require(users[msg.sender].role == 2);\r\n       _;\r\n    }\r\n\r\n    modifier onlyRetailer{\r\n       \r\n       require(users[msg.sender].role == 3);\r\n       _;\r\n    }\r\n    \r\n    // Define a modifier that checks if the state of a lot is Made\r\n    modifier made(string memory _lotId) {\r\n        \r\n        require(lots[_lotId].productState == State.Made);\r\n        _;\r\n    }\r\n  \r\n    // Define a modifier that checks if the state of multiple lots is Packed\r\n    modifier packed(string[] memory _lotId) {\r\n        \r\n        for(uint i=0; i<_lotId.length;i++)\r\n            require(lots[_lotId[i]].productState == State.Packed);\r\n        _;\r\n    }\r\n\r\n    // Define a modifier that checks if the state of multiple lots is ForSale\r\n    modifier forSale(string[] memory _lotId) {\r\n\r\n        for(uint i=0; i<_lotId.length;i++)\r\n            require(lots[_lotId[i]].productState == State.ForSale);\r\n        _;\r\n    }\r\n\r\n    // Define a modifier that checks if the state of multiple lots is Sold\r\n    modifier sold(string[] memory _lotId) {\r\n\r\n        for(uint i=0; i<_lotId.length;i++)\r\n            require(lots[_lotId[i]].productState == State.Sold);\r\n        _;\r\n    }\r\n  \r\n    // Define a modifier that checks if the state of multiple lots is Shipped\r\n    modifier shipped(string[] memory _lotId) {\r\n\r\n        for(uint i=0; i<_lotId.length;i++)\r\n            require(lots[_lotId[i]].productState == State.Shipped);\r\n        _;\r\n    }\r\n\r\n    // Define a modifier that checks if the state of multiple lots is Received\r\n    modifier received(string[] memory _lotId) {\r\n\r\n        for(uint i=0; i<_lotId.length;i++)\r\n            require(lots[_lotId[i]].productState == State.Received);\r\n        _;\r\n    }\r\n\r\n    // Define a modifier that checks if the deal was valid\r\n    modifier validDeal(string memory txnHash) {\r\n\r\n        require(deals[txnHash].sellingPrice==deals[txnHash].buyingPrice);\r\n        _;\r\n    }\r\n    \r\n    function checkIsUser(address account) internal view returns(bool){\r\n        \r\n        return isUser[account];\r\n    }\r\n    \r\n    function getUserRole(address account) public view returns(uint){\r\n\r\n        if(account==contractOwner)\r\n            return 0;\r\n        if(checkIsUser(account))\r\n            return users[account].role;\r\n        else\r\n            return 4;\r\n    }\r\n\r\n    function getUserDetails(address account) public view returns(string memory, string memory){\r\n            \r\n        return (\r\n                users[account].name,\r\n                users[account].officeAddress\r\n            );\r\n    }\r\n\r\n    function setUser(address account) internal{\r\n        \r\n        isUser[account]=true;\r\n    }\r\n\r\n  /*  function removeUser(address account) internal{\r\n        users[users[account].parentId].childIds[account]=false;\r\n        users[account].chi\r\n        isUser[account]=false;\r\n    }\r\n    */\r\n    \r\n    function makeOwnerAsManufacturer() public onlyContractOwner{\r\n        \r\n        if(users[msg.sender].role==0){\r\n            users[msg.sender].role=1;\r\n            emit OwnerMadeManufacturer();\r\n        }\r\n    }\r\n    \r\n    function addChildUser(string memory _name, string memory _officeAddress, address _userAccount) public {\r\n        \r\n        require(!checkIsUser(_userAccount));\r\n        user memory child = user({\r\n            role: getUserRole(msg.sender)+1,\r\n            userId : _userAccount,\r\n            parentId : msg.sender,\r\n            currentQuantity : 0,\r\n            name: _name,\r\n            officeAddress: _officeAddress\r\n        });\r\n        \r\n        users[_userAccount] = child;\r\n        users[msg.sender].childIds[_userAccount] = true;\r\n        setUser(_userAccount);\r\n        emit UserAdded(_userAccount);\r\n    }\r\n    \r\n    function addOtherUser(string memory _name, string memory _officeAddress, address _parentAccount, address _userAccount, uint _userRole) public {\r\n        \r\n        require(!checkIsUser(_userAccount));\r\n        require(getUserRole(msg.sender)<_userRole);\r\n        if(_parentAccount!=contractOwner)\r\n            require(getUserRole(_parentAccount)==_userRole-1);\r\n        else{\r\n            require(_userRole==2);\r\n            makeOwnerAsManufacturer();\r\n        }\r\n        user memory child = user({\r\n            role: _userRole,\r\n            userId : _userAccount,\r\n            parentId : _parentAccount,\r\n            currentQuantity : 0,\r\n            name: _name,\r\n            officeAddress: _officeAddress\r\n        });\r\n        \r\n        users[_userAccount] = child;\r\n        users[_parentAccount].childIds[_userAccount] = true;\r\n        setUser(_userAccount);\r\n        emit UserAdded(_userAccount);\r\n    }\r\n    \r\n   \r\n    \r\n    function makeLot(string memory _lotId, string[] memory _productIds) public onlyManufacturer{\r\n        \r\n        for(uint i = 0;i<_productIds.length;i++){\r\n            product memory productDetails = product({\r\n                productId : _productIds[i],\r\n                lotId : _lotId,\r\n                finalBuyingPrice : 0,\r\n                finalSellingPrice : 0\r\n            });\r\n            products[_productIds[i]] = productDetails;\r\n        }\r\n        \r\n        lot memory lotDetails = lot({\r\n            lotId : _lotId,\r\n            // factoryId : _factoryId,\r\n            currentOwner : msg.sender,\r\n            productIds : _productIds,\r\n            productState : State.Made\r\n        });\r\n        \r\n        lots[_lotId] = lotDetails;\r\n        lots[_lotId].trackUser[0] = contractOwner;\r\n        lots[_lotId].trackUser[1] = msg.sender;\r\n        emit LotMade(_lotId);\r\n    }\r\n    \r\n    function packedLot(string memory _lotId) public onlyManufacturer made(_lotId){\r\n        \r\n        lots[_lotId].productState = State.Packed;\r\n        emit Packed();\r\n    }\r\n    \r\n    function forSaleLotByManufacturer(string[] memory _lotId, uint _price) public onlyManufacturer packed(_lotId){\r\n        \r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].sellingPrices[msg.sender] = _price;\r\n            lots[_lotId[i]].productState = State.ForSale;\r\n        }\r\n        users[msg.sender].currentQuantity+=_lotId.length;\r\n        emit ForSale();\r\n    }\r\n    \r\n    function payFromDistributorToManufacturer(uint _quantity, uint _totalBuyingPrice, string memory _txnHash) public onlyDistributor{\r\n        \r\n        require(_quantity<=users[users[msg.sender].parentId].currentQuantity);\r\n        users[msg.sender].currentQuantity+=_quantity;\r\n        users[users[msg.sender].parentId].currentQuantity-=_quantity;\r\n        deal memory dealDetails = deal({\r\n            txnHash: _txnHash,\r\n            capacity: _quantity,\r\n            buyerAddress: msg.sender,\r\n            buyingPrice:  _totalBuyingPrice,\r\n            sellerAddress: users[msg.sender].parentId,\r\n            sellingPrice: 0\r\n        });\r\n        deals[_txnHash] = dealDetails;\r\n        emit PaymentSuccessful();\r\n    }\r\n\r\n    function sellLotToDistributor(string memory _txnHash, uint _totalSellingPrice, string[] memory _lotId) public onlyManufacturer forSale(_lotId){\r\n        \r\n        deal storage activeDeal = deals[_txnHash];\r\n        if(activeDeal.buyingPrice!=_totalSellingPrice){\r\n            activeDeal.buyerAddress.transfer(activeDeal.buyingPrice);\r\n            emit DealFailed(activeDeal.buyerAddress);\r\n        }else{\r\n            activeDeal.sellingPrice = _totalSellingPrice;\r\n            deals[_txnHash] = activeDeal;\r\n            for(uint i = 0;i<_lotId.length;i++){\r\n                lots[_lotId[i]].buyingPrices[activeDeal.buyerAddress] = (activeDeal.buyingPrice/activeDeal.capacity);\r\n                lots[_lotId[i]].sellingPrices[msg.sender] = (activeDeal.sellingPrice/activeDeal.capacity);\r\n                lots[_lotId[i]].buyingPrices[msg.sender] = 0;\r\n                lots[_lotId[i]].currentOwner = activeDeal.buyerAddress;\r\n                lots[_lotId[i]].productState = State.Sold;\r\n            }\r\n            emit Sold();\r\n        }\r\n    }\r\n    \r\n    function shipLotFromManufacturerToDistributor(string[] memory _lotId, string memory _txnHash) public onlyManufacturer validDeal(_txnHash) sold(_lotId){\r\n         \r\n        require(msg.sender!=deals[_txnHash].buyerAddress);\r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].trackUser[2] = deals[_txnHash].buyerAddress;\r\n            lots[_lotId[i]].trackTxn[2] = _txnHash;\r\n            lots[_lotId[i]].productState = State.Shipped;\r\n        }\r\n        emit Shipped();\r\n    }\r\n\r\n    function receivedByDistributor(string[] memory _lotId) public onlyDistributor shipped(_lotId){\r\n\r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].productState = State.Received;\r\n        }\r\n        emit Received();\r\n    }\r\n\r\n    function forSaleLotByDistributor(string[] memory _lotId, uint _price) public onlyDistributor received(_lotId){\r\n                \r\n        require(users[msg.sender].currentQuantity>=_lotId.length);\r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].sellingPrices[msg.sender] = _price;\r\n            lots[_lotId[i]].productState = State.ForSale;\r\n        }\r\n        emit ForSale();\r\n    }\r\n\r\n    function payFromRetailerToDistributor(uint _quantity, uint _totalBuyingPrice, string memory _txnHash) public onlyRetailer{\r\n        \r\n        require(_quantity<=users[users[msg.sender].parentId].currentQuantity);\r\n        users[msg.sender].currentQuantity+=_quantity;\r\n        users[users[msg.sender].parentId].currentQuantity-=_quantity;\r\n        deal memory dealDetails = deal({\r\n            txnHash: _txnHash,\r\n            capacity: _quantity,\r\n            buyerAddress: msg.sender,\r\n            buyingPrice:  _totalBuyingPrice,\r\n            sellerAddress: users[msg.sender].parentId,\r\n            sellingPrice: 0\r\n        });\r\n        deals[_txnHash] = dealDetails;\r\n        emit PaymentSuccessful();\r\n    }\r\n\r\n    function sellLotToRetailer(string memory _txnHash, uint _totalSellingPrice, string[] memory _lotId) public onlyDistributor forSale(_lotId){\r\n        \r\n        deal storage activeDeal = deals[_txnHash];\r\n        if(activeDeal.buyingPrice!=_totalSellingPrice){\r\n            activeDeal.buyerAddress.transfer(activeDeal.buyingPrice);\r\n            emit DealFailed(activeDeal.buyerAddress);\r\n        }else{\r\n            activeDeal.sellingPrice = _totalSellingPrice;\r\n            deals[_txnHash] = activeDeal;\r\n            for(uint i = 0;i<_lotId.length;i++){\r\n                lots[_lotId[i]].buyingPrices[activeDeal.buyerAddress] = (activeDeal.buyingPrice/activeDeal.capacity);\r\n                lots[_lotId[i]].sellingPrices[msg.sender] = (activeDeal.sellingPrice/activeDeal.capacity);\r\n                lots[_lotId[i]].currentOwner = activeDeal.buyerAddress;\r\n                lots[_lotId[i]].productState = State.Sold;\r\n            }\r\n            emit Sold();\r\n        }\r\n    }\r\n    \r\n    function shipLotFromDistributorToRetailer(string[] memory _lotId, string memory _txnHash) public onlyDistributor validDeal(_txnHash) sold(_lotId){\r\n        \r\n        require(msg.sender!=deals[_txnHash].buyerAddress);\r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].trackUser[3] = deals[_txnHash].buyerAddress;\r\n            lots[_lotId[i]].trackTxn[3] = _txnHash;\r\n            lots[_lotId[i]].productState = State.Shipped;\r\n        }\r\n        emit Shipped();\r\n    }\r\n\r\n    function receivedByRetailer(string[] memory _lotId) public onlyRetailer shipped(_lotId){\r\n\r\n        for(uint i = 0;i<_lotId.length;i++){\r\n            lots[_lotId[i]].productState = State.Received;\r\n        }\r\n        emit Received();\r\n    }\r\n\r\n    function getProductDetails(string memory _productId) public view returns(product memory){\r\n\r\n        return products[_productId];\r\n    }\r\n\r\n    function setProductFinalSellingPrice(string memory _productId, uint sellingPrice) public {\r\n        \r\n        require(getUserRole(msg.sender)==3);\r\n        products[_productId].finalSellingPrice = sellingPrice;\r\n    }\r\n    \r\n    function setProductFinalBuyingPrice(string memory _productId, uint buyingPrice) public {\r\n        \r\n        require(getUserRole(msg.sender)==4);\r\n        products[_productId].finalBuyingPrice = buyingPrice;\r\n    }\r\n\r\n    function trackProductByProductId(string memory _productId) public view returns(uint, address[] memory, uint){\r\n        \r\n        string storage _lotId = products[_productId].lotId;\r\n        return trackProductByLotId(_lotId);\r\n    }\r\n\r\n    function trackProductByLotId(string memory _lotId) public view returns(uint, address[] memory, uint){\r\n        \r\n        address[] memory ret = new address[](4);\r\n        uint n = users[lots[_lotId].currentOwner].role;\r\n        for (uint i=0; i<=n; i++) {\r\n            ret[i]=lots[_lotId].trackUser[i];\r\n        }\r\n        return (\r\n            n,\r\n            ret,\r\n            uint(lots[_lotId].productState)\r\n        );\r\n    }\r\n}`;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {\r\n  Completed,\r\n  Deployment,\r\n  ProductDetails,\r\n  SupplyChain,\r\n  YourDetails,\r\n} from \"./Forms\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullPage: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    marginRight: theme.spacing(30),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Your Details\",\r\n    \"Product Details\",\r\n    \"Customize Supply Chain\",\r\n    \"Deploy Smart Contract\",\r\n  ];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return <YourDetails />;\r\n    case 1:\r\n      return <ProductDetails />;\r\n    case 2:\r\n      return <SupplyChain />;\r\n    case 3:\r\n      return <Deployment />;\r\n    default:\r\n      return \"Please go to Your Details\";\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Completed />\r\n            <div className={classes.floatRight}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                startIcon={<ArrowBack color=\"primary\" />}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className={classes.fullPage}>{getStepContent(activeStep)}</div>\r\n            <div className={classes.floatRight}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                startIcon={<ArrowBack color=\"primary\" />}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                endIcon={<ArrowForwardIcon />}\r\n              >\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HorizontalLabelPositionBelowStepper from \"../components/Stepper\";\r\n\r\nfunction CreatePage() {\r\n  return (\r\n    <div>\r\n      <HorizontalLabelPositionBelowStepper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePage;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <Container maxWidth=\"lg\">\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Typography className=\"heading\" variant=\"h3\">\r\n          Supply\r\n        </Typography>\r\n        <Typography className=\"heading\" variant=\"h1\">\r\n          Chain Hub\r\n        </Typography>\r\n        <Typography variant=\"h6\" className=\"sub-heading\">\r\n          Create customized Supply Chain for your Products without code\r\n        </Typography>\r\n        <br />\r\n        <Link to=\"/build\" style={{ textDecoration: \"none\", color: \"#2196f3\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            endIcon={<ArrowForwardIcon color=\"primary\" />}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              color: \"#2196f3\",\r\n              borderRadius: 20,\r\n              padding: \"0.5rem 1.5rem\",\r\n            }}\r\n          >\r\n            Get Started\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CreatePage from \"./pages/CreatePage\";\r\nimport HomePage from \"./pages/HomePage\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/home\" exact>\r\n        <HomePage />\r\n      </Route>\r\n      <Route path=\"/build\" exact>\r\n        <CreatePage />\r\n      </Route>\r\n      <Redirect to=\"/home\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  const THEME = createMuiTheme({\n    typography: {\n      fontFamily: `\"Poppins\", sans-serif`,\n      fontSize: 14,\n      fontWeightLight: 300,\n      fontWeightRegular: 400,\n      fontWeightMedium: 500,\n    },\n    palette: {\n      primary: {\n        main: \"#2196f3\",\n      },\n    },\n  });\n  return (\n    <MuiThemeProvider theme={THEME}>\n      <div className=\"App\">\n        <Navbar />\n        <Routes />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}